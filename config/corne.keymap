/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
  chain-length = <27>;
  // 21 backlight + 6 glowlight
};

&soft_off {
    hold-time-ms = <2000>;
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | LSHFT|  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ENT  |
//                    | GUI |LCTRL|SHIFT|   | SPC | ALT  | DEL |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &lt 1 TAB &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &to 3 &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                  &kp LGUI &kp LCTRL &kp LSHFT   &lt 2 SPACE &kp RALT &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// |      | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | LSHFT|BTCLR| RST |RGB_T|RGB_I|RGB_D|   |     |     |     |     |     |      |
//                    | GUI |LCTRL|LSHFT|   | SPC | ALT | DEL |
                        bindings = <
   &kp ESC    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &trans  &bt BT_CLR   &sys_reset   &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD    &trans   &trans   &trans &trans    &trans &trans
                           &kp LGUI     &kp LCTRL    &kp LSHFT    &trans         &kp RALT &kp DEL
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// |      |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &soft_off   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
   &trans    &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
   &trans    &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &kp LCTRL   &kp LSHFT   &trans    &kp RALT     &kp DEL
                        >;
                };
                
                function_layer {
                    bindings = <
   &trans    &kp F1   &kp F2 &kp F3   &kp F4   &kp F5      &kp F6    &kp F7    &kp F8    &kp F9   &kp F10  &trans
   &trans    &trans   &trans &trans   &trans   &trans      &kp HOME &kp PG_DN &kp PG_UP &kp END &kp PSCRN &kp F11
   &to 0     &kp C_PP &kp C_PREV &kp C_NEXT   &kp C_VOL_UP   &kp C_VOL_DN      &trans &kp C_MUTE  &kp KP_MINUS  &kp KP_PLUS &trans &kp F12
                             &kp LGUI &kp LCTRL   &kp LSHFT   &trans    &kp RALT     &kp DEL
                    >;
                };
        };
};
